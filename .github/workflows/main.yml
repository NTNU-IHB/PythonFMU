name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2019]
        python-version: [3.7, 3.8, 3.9]
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
    
      - name: Build distribution artifacts
        run: |
          python --version
          python -m pip install setuptools wheel
          python setup.py sdist bdist_wheel

      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: python-wheel
          path: dist

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019]
        python-version: [3.7, 3.8, 3.9]
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2

      - name: Download python package
        uses: actions/download-artifact@v1
        with:
          name: python-wheel

      - name: Setup Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
        
      - name: Run the Tests
        run: |
          conda activate test
          # Install test dependencies - update environment.yml if they changed
          conda env update --name=test --file=environment.yml
          cd python-wheel
          ls
          python --version
          python -m pip  install --no-index --find-links . pythonfmu
          python -m pytest --pyargs pythonfmu
          cd ..
        shell: bash -l {0}

  test-notebook:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Cache conda packages for Linux
        if: startsWith(runner.os, 'Linux')
        uses: actions/cache@v2
        with:
          path: /usr/share/miniconda/pkgs
          key: ${{ runner.os }}-test-nb-cache-conda-pkgs-${{ hashFiles('binder/environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-test-nb-cache-conda-pkgs-
            ${{ runner.os }}-test-nb-

      - name: Setup Python
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
        
      - name: Run the Tests
        run: |
          conda activate test
          # Install binder dependencies - update binder/environment.yml if they changed
          cp binder/* .
          conda env update --name=test --file=environment.yml
          bash ./postBuild
          cd ./examples
          jupyter nbconvert --to notebook --execute demo.ipynb
          cd ..
        shell: bash -l {0}

      - name: Archive executed notbook
        uses: actions/upload-artifact@v2
        with:
          name: nb-examples
          path: examples
